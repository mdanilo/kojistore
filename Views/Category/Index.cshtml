@model DomainProduct.Entities.Category
@{
    ViewBag.Title = string.IsNullOrEmpty(Model.Title) ? Model.Name : Model.Title;
    Layout = "~/Views/Shared/Base/_LayoutBreadCrumbLeftSideBar.cshtml";
    var returnUrl = HttpContext.Current.Request.Url.AbsolutePath;

    string PathLogo = "/assets/image/logo/logo.png";

    Uri Url = System.Web.HttpContext.Current.Request.Url;

    string UrlLogoStore = Url.Scheme + "://" + Url.Host + PathLogo;

    string UrlLogo = String.IsNullOrEmpty(Model.Image) ? UrlLogoStore : Url.Scheme + ":" + Model.Image;
}

@section CustomSeo {
    @{
        if (!String.IsNullOrEmpty(Model.MetaDescription))
        {
            <meta name="Description" content="@Model.MetaDescription">
            <meta property="og:description" content="@Model.MetaDescription">
            <meta name="twitter:description" content="@Model.MetaDescription">
        }
        <meta property="og:type" content="website">
        <meta property="og:url" content="@HttpUtility.HtmlEncode(Request.Url)">
        <meta name="twitter:url" content="@HttpUtility.HtmlEncode(Request.Url)">
        <meta property="og:title" content="@Html.Raw(ViewBag.Title)">
        <meta name="twitter:title" content="@Html.Raw(ViewBag.Title)">
        <meta property="og:image" content="@UrlLogo">
    }
}

<!-- Page: ~/Views/Shared/Blocks/Banner/_SideHalfBanner.cshtml -->
@Html.Action("sideHalfBannerCategory", "banner", new {categoryId = Model.IdCategory})

@section breadcrumbs {
    <div class="ui container fluid breadcrumbs">
        <div class="ui breadcrumb">
            <a class="section" href="/">Home</a>
            @{
                var index = 0;
                foreach (var category in Model.RelatedCategories)
                {
                    index++;
                    <i class="margin right left small">/</i>
                    if (index == Model.RelatedCategories.Count)
                    {
                        <div class="section">@(category != null ? category.Name : "")</div>
                    }
                    else
                    {
                        <div class="section">@(category != null ? category.Name : "")</div>
                    }
                }
            }
        </div>
    </div>
}

@section banner {
    @if (Model != null)
    {
        @Html.Action("bannerCategory", "banner", new {id = Model.IdCategory, type = 'F'})
    }
}

@section footerHalfbanner {
    @Html.Action("bannerCategory", "banner", new {id = Model.IdCategory, type = 'R'})
}

@section descriptionCategory{
    @if (Model.Description != null && Model.Description.Length > 0)
    {
        <div class="ui container margin top medium">
            <div class="row">
                @Html.Raw(@Model.Description)
            </div>
        </div>
    }
}

@section filters {
    <div class="display flex alig-items center justify content between column filterColumn">
        <div class="column filterBlock" id="filterBlock">
            <!-- Page: ~/Views/Shared/Common/_FilterMenu.cshtml -->
            @if (LojaCorp.Control.Company._Company.ViewProductFiltersUrl)
            {
                @Html.Action("filterMenuNew", "product", new {category = Model.IdCategory, brand = "", group = "", keyword = ""})
            }
            else
            {
                @Html.Action("filterMenu", "product")
            }
        </div>

        <div class="ui grid mobile hide">
            <div class="row one column">
                <div class="column right aligned right floated">
                    <button class="ui mobile only left floated icon button basic filterbutton right labeled small" data-tooltip="Filtros" data-inverted="">
                        <i class="filter icon"></i>
                        Filtros
                    </button>
                    <div class="ui dropdown button basic dropdownitens small hideme">
                        <span class="text">@(Request.QueryString["pageSize"] != null ? Request.QueryString["pageSize"] : "Itens")</span>
                        <i class="dropdown icon"></i>
                        <div class="menu">
                            <div class="item" data-value="12">
                                12
                            </div>
                            <div class="item" data-value="18">
                                18
                            </div>
                            <div class="item" data-value="24">
                                24
                            </div>
                            <div class="item" data-value="30">
                                30
                            </div>
                        </div>
                    </div>
                    <div class="ui dropdown button basic dropdownorder small">
                        <span class="text">Ordenar por</span>
                        <i class="dropdown icon"></i>
                        <div class="menu">
                            <div class="item" data-value="lancamentos">
                                <i class="asterisk icon"></i>
                                Lançamentos
                            </div>
                            <div class="item" data-value="maior_preco">
                                <i class="sort numeric descending icon"></i>
                                Maior Preço
                            </div>
                            <div class="item" data-value="mais_vendidos">
                                <i class="diamond icon"></i>
                                Mais Vendidos
                            </div>
                            <div class="item" data-value="menor_preco">
                                <i class="sort numeric ascending icon"></i>
                                Menor Preço
                            </div>
                            <div class="item" data-value="nome_a_z">
                                <i class="sort alphabet ascending icon"></i>
                                Nome [A-Z]
                            </div>
                            <div class="item" data-value="nome_z_a">
                                <i class="sort alphabet descending icon"></i>
                                Nome [Z-A]
                            </div>
    
    
                        </div>
                    </div>
                    <button id="viewgrid" class="ui icon button basic small viewgrid mobile only" data-tooltip="Grid" data-inverted="">
                        <i class="grid layout icon"></i>
                    </button>
                    <button id="viewlist" class="ui icon button basic small viewlist mobile only" data-tooltip="Lista" data-inverted="">
                        <i class="list layout icon"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<div class="column">
    <div id="list">
        <!-- ~/Views/Shared/Blocks/Product/_ProductsCategoryList.cshtml -->
        <!-- ~/Views/Shared/Blocks/Product/_ProductsCategoryGrid.cshtml -->
        @if (Model != null)
        {
            @Html.Action("getProductsCategory", "product", new
            {
                category = Model.IdCategory,
                viewList = Request.QueryString["viewList"] ?? "",
                pageNumber = Request.QueryString["pageNumber"] ?? "",
                pageSize = LojaCorp.Control.Company._Company.QuantityItemsPage > 0 ? LojaCorp.Control.Company._Company.QuantityItemsPage : 12,
                order = Request.QueryString["order"] ?? "",
                brand = Request.QueryString["brand"] ?? "",
                group = Request.QueryString["group"] ?? "",
                initialPrice = Request.QueryString["initialPrice"] ?? "",
                finalPrice = Request.QueryString["finalPrice"] ?? "",
                variations = Request.QueryString["variations"] ?? "",
                idAttribute = Request.QueryString["idAttribute"] ?? "",
                idCategories = Request.QueryString["idCategories"] ?? ""
            })
        }
    </div>
</div>
<input type="hidden" name="CurrentPage" id="CurrentPage" value="category" />
<input type="hidden" name="GenericPageFilter" id="GenericPageFilter" value="@Model.IdCategory" />
<input type="hidden" name="infinityPage" id="infinityPage" value="@LojaCorp.Control.Company._Company.InfiniteScrolling.ToString()" />
<input type="hidden" name="itensPage" id="itensPage" value="@LojaCorp.Control.Company._Company.QuantityItemsPage" />
<input type="hidden" name="ViewProductFiltersUrl" id="ViewProductFiltersUrl" value="@LojaCorp.Control.Company._Company.ViewProductFiltersUrl.ToString()" />
